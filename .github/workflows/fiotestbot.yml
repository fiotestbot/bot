name: fiotestbot

on:
  workflow_dispatch:
# schedule:
#   - cron: "* /15 * * *" # every 15 minutes

permissions:
  contents: write

jobs:
  query:
    runs-on: ubuntu-latest

    outputs:
      msg_ids: ${{ steps.msg_ids.outputs.msg_ids }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: git setup
      run: |
        git config --global user.email "fiotestbot@users.noreply.github.com"
        git config --global user.name "fiotestbot"

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install python3-bs4 python3-github

    - name: Run query to collect message IDs
      id: msg_ids
      run: |
        MSGIDS=$(python3 query.py | jq --raw-input . | jq --slurp .)
        echo $MSGIDS
        echo msg_ids=$MSGIDS >> $GITHUB_OUTPUT

    - name: update repository with new message IDs
      if: ${{ steps.msg_ids.outputs.msg_ids != '[]' }}
      run: |
        git commit -m "update message IDs"
        git push

    - name: check for complete GitHub Actions
      env:
        GITHUB_PAT: ${{ secrets.PAT }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
#
# 1. Create a token: Settings->Developer settings->Personal access tokens->Generate new token
# 2. Set GitHub Actions secret: Settings->Secrets and variables->Actions->New repository secret
#
      run: |
        python3 query.py --notify

  runtests:
    needs: query
    runs-on: ubuntu-latest
    if: ${{ needs.query.outputs.msg_ids != '[]' }}

    strategy:
      matrix:
        msg_id: ${{fromJson(needs.query.outputs.msg_ids)}}

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        repository: axboe/fio
        ref: master
        fetch-depth: 0
        ssh-key: ${{ secrets.SSH_KEY }}

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install b4

    - name: git setup
      run: |
        git config --global user.email "fiotestbot@users.noreply.github.com"
        git config --global user.name "fiotestbot"
        git remote set-url origin git@github.com:fiotestbot/fio.git

    - name: Create a new branch and push it
      run: |
        echo ${{ matrix.msg_id }}
        git checkout -b fiotestbot-${{ matrix.msg_id }}
        b4 am -3 -o - "${{ matrix.msg_id }}" | git am --whitespace=fix
        git push origin fiotestbot-${{ matrix.msg_id }}
